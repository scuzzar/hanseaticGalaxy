[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/models/body.tscn" type="PackedScene" id=1]
[ext_resource path="res://Ship/Artemiss/Artemiss.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/textures/2k_sun.jpg" type="Texture" id=3]
[ext_resource path="res://assets/particel/fire_01.png" type="Texture" id=4]
[ext_resource path="res://script/Ship.gd" type="Script" id=5]




[sub_resource type="SphereMesh" id=1]

[sub_resource type="SpatialMaterial" id=2]
vertex_color_use_as_albedo = true
albedo_texture = ExtResource( 3 )
emission_enabled = true
emission = Color( 0.988235, 0.741176, 0, 1 )
emission_energy = 2.96
emission_operator = 0
emission_on_uv2 = false
emission_texture = ExtResource( 3 )

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0.109589, 0.342466, 0.630137, 1 )
colors = PoolColorArray( 0.986328, 1, 0, 1, 0.937255, 0.188235, 0.188235, 1, 1, 0.47451, 0.0117647, 0.921569, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="ParticlesMaterial" id=5]
lifetime_randomness = 0.15
emission_shape = 1
emission_sphere_radius = 0.95
gravity = Vector3( 0, 0, 0 )
linear_accel = -2.21
radial_accel = 2.92
radial_accel_random = 1.0
tangential_accel = -1.0
tangential_accel_random = 1.0
scale_random = 0.55
color_ramp = SubResource( 4 )

[sub_resource type="SpatialMaterial" id=6]
flags_transparent = true
flags_unshaded = true
flags_do_not_receive_shadows = true
vertex_color_use_as_albedo = true
params_blend_mode = 1
params_billboard_mode = 3
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false
albedo_texture = ExtResource( 4 )
distance_fade_mode = 1
distance_fade_min_distance = 0.0
distance_fade_max_distance = 2.0

[sub_resource type="QuadMesh" id=7]
material = SubResource( 6 )

[sub_resource type="BoxShape" id=8]
extents = Vector3( 100, 0, 100 )

[sub_resource type="GDScript" id=9]
script/source = "extends Camera

onready var ship = $\"../Ship\"

var lastDrag
var dragging = false
var _move_speed: Vector3
export var offset = 5  

# Called when the node enters the scene tree for the first time.
func _ready():
	_snapToShip()

func _process(delta):
	_snapToShip()

func _snapToShip():
	self.translation.x = ship.translation.x
	self.translation.z = ship.translation.z + offset

func _input(event):
	if event is InputEventMouseButton :
		if Input.is_mouse_button_pressed(BUTTON_WHEEL_UP):
			self.translate_object_local(Vector3(0,1,0))
			
		if Input.is_mouse_button_pressed(BUTTON_WHEEL_DOWN):
			self.translate_object_local(Vector3(0,-1,0))
			
 
func _on_floor_input_event(camera, event, click_position, click_normal, shape_idx):
#	if Input.is_mouse_button_pressed(BUTTON_LEFT):
#		path.translation = click_position
	
	#if Input.is_mouse_button_pressed(BUTTON_RIGHT):
	#	click_position.y = 0
	#	if(!dragging):
	#		dragging = true
	#		lastDrag = click_position	
	#	self.global_translate(lastDrag - click_position)
	#elif(dragging):
	#	dragging = false
	pass



func _on_Ship_trust_forward():
	pass # Replace with function body.
"

[sub_resource type="BoxShape" id=10]
extents = Vector3( 0.425556, 0.196835, 0.80876 )

[sub_resource type="GDScript" id=11]
script/source = "extends Control

onready var ship = $\"../Ship\"

var past = []
var color = Color(0,1,0)
var width = 3
export var lenth = 50

func _draw():
	if(past.size()>1):
		for i in range(past.size()-1):
			var v1 = get_viewport().get_camera().unproject_position(past[i])
			var v2 = get_viewport().get_camera().unproject_position(past[i+1])
			draw_line(v1,v2,color,width,true)
		var v1 = get_viewport().get_camera().unproject_position(past.back())
		var v2 = get_viewport().get_camera().unproject_position(ship.position_state)
		draw_line(v1,v2,color,width,true)

func _process(delta):
	update()

func appendHistory():	
	past.append(ship.position_state)
	#print(ship.position_state)
	if(past.size()>lenth):
		past.pop_front()
	pass

func _on_historyTimer_timeout():
	appendHistory()	
"

[node name="Map" type="Spatial"]

[node name="Sun" type="Spatial" parent="."]
transform = Transform( 4.15004, 0, 0, 0, 4.15004, 0, 0, 0, 4.15004, 0, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Sun"]
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="Light" type="OmniLight" parent="Sun"]
light_color = Color( 1, 0.984314, 0.862745, 1 )
shadow_enabled = true
omni_range = 1000.0

[node name="Particles" type="Particles" parent="Sun"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0124102, -1.19209e-07, 0.00327873 )
visible = false
amount = 80
process_material = SubResource( 5 )
draw_pass_1 = SubResource( 7 )

[node name="floor" type="StaticBody" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0558624, -0.0365667, -0.00101089 )
shape = SubResource( 8 )

[node name="RTS_Camera" type="Camera" parent="."]
transform = Transform( 0.999902, 0.0138488, 0.00201442, -0.00878013, 0.508715, 0.86089, 0.0108975, -0.860824, 0.508787, -16.4854, 7.79921, -2.76127 )
script = SubResource( 9 )
offset = 7

[node name="Body1" parent="." instance=ExtResource( 1 )]
transform = Transform( 0.237272, 0, 0, 0, 0.237272, 0, 0, 0, 0.237272, -11.4247, 3.8147e-06, -17.8816 )

[node name="Body2" parent="." instance=ExtResource( 1 )]
transform = Transform( 0.237272, 0, 0, 0, 0.237272, 0, 0, 0, 0.237272, -31.1546, 0.328752, -4.16698 )

[node name="Body3" parent="." instance=ExtResource( 1 )]
transform = Transform( 0.237272, 0, 0, 0, 0.237272, 0, 0, 0, 0.237272, 19.9815, 0.600472, 18.7618 )

[node name="Ship" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -8.3417, -0.0380654, -9.5573 )
collision_layer = 2
collision_mask = 2
can_sleep = false
axis_lock_linear_y = true
axis_lock_angular_x = true
axis_lock_angular_z = true
script = ExtResource( 5 )
trust = 5

[node name="CollisionBox" type="CollisionShape" parent="Ship"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -9.53674e-07, 0, 0 )
shape = SubResource( 10 )

[node name="Artemiss" parent="Ship" instance=ExtResource( 2 )]

[node name="path" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
script = SubResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="historyTimer" type="Timer" parent="path"]
wait_time = 0.28
autostart = true
[connection signal="input_event" from="floor" to="RTS_Camera" method="_on_floor_input_event"]
[connection signal="timeout" from="path/historyTimer" to="path" method="_on_historyTimer_timeout"]
